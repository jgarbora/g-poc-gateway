spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - OPTIONS
              - UPDATE
              - DELETE
              - PATCH
      routes:
        - id: public
          uri: https://g-poc-service-without-security.herokuapp.com/api/public
          predicates:
            - Path=/api/public

        - id: private
          uri: https://g-poc-service-without-security.herokuapp.com/api/private
          predicates:
            - Path=/api/private

        - id: crud-user
          uri: http://127.0.0.1:8080/api/user
          predicates:
            - Path=/api/user/**
          filters:
            - PostFilterAuthorization

        - id: create-interrogation
          uri: https://g-poc-service-without-security.herokuapp.com/api/user/interrogation
          predicates:
            - Path=/api/user/interrogation
          filters:
            - PostFilterAuthorization

        - id: find-user
          uri: https://g-poc-service-without-security.herokuapp.com/api/find-user
          predicates:
            - Path=/api/find-user

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://jgarbora.eu.auth0.com/
          audience: geneva-poc-api

auth0:
  management:
    api:
      clientSecret: ${AUTH0_API_CLIENT_SECRET}
      clientId: ${AUTH0_API_CLIENT_ID}

logging:
  level:
    com:
      g:
        g:
          apigateway:
            filter: trace
    org:
      springframework:
        cloud:
          gateway: trace
        security: trace
        cache: trace

management:
  endpoints:
    web:
      exposure:
        include: '*'

server:
  port: 8181



